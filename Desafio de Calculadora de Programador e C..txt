#include <stdio.h>
#include <stdlib.h>



int main(int argc, char *argv[]) {
	int num1, num2, resultado;
	int base;
	char operacao;
	
	
	printf("Escolha a base de entrada (2 - binario, 8 - octal, 10 - decimal, 16 - hexadecimal)\n");
	scanf("%d", &base);
	
	printf("Digite o primeiro numero:\n");
	if(base == 2){
		scanf("%d", &num1);
	}
	 else if (base == 8){
		scanf("%o", &num1);
	}
	 else if (base == 10){
		scanf("%d", &num1);
	}
	 else if (base == 16){
		scanf("%x", &num1);
	}	
	
	printf("Escolha a operacao: (+, -, *, /, %%, &, |, ^)\n");
	scanf(" %c", &operacao);
	
	printf("Digite o segundo numero:\n");
	if(base == 2){
		scanf ("%d", &num2);
	}
	 else if (base == 8){
		scanf("%o", &num2);
	}
	 else if (base == 10){
		scanf("%d", &num2);
	}
	 else if (base == 16){
		scanf("%x", &num2);
	}	
	
	switch (operacao){
		case '+':
			resultado = num1 + num2;
			break;
	
		case '-':
			resultado = num1 - num2;
			break;
		
		case '*':
			resultado = num1 * num2;
			break;
			
		case '/':
			if(num2 != 0){
			resultado = num1 / num2;
		} 
		else{
			printf("Erro: divisao por 0\n");
			return 1;
		}
		break;
		
		case '%':
			if(num2 != 0){
		resultado = num1 % num2;
		}
		else{
			printf("Erro: divisao por 0\n");
			return 1;
		}
		break;
		
		case '&':
			resultado = num1 & num2;
			break;
			
		case '|':
			resultado = num1 | num2;
			break;
			
		case '^':
			resultado = num1 ^ num2;
			break;
				
		default:
			printf("Operacao invalida");
			return 0;
		} 
	   
	   printf("Resultado %d\n", resultado);
	   
	   //Exibir o resultado em varias bases
	   printf("Resultado em decimal: %d\n", resultado);

    printf("Resultado em binario: ");
    int binario[32];
    int i = 0;
    int temp_resultado = resultado;
    if (temp_resultado == 0){
        printf("0");
    } else {
        while (temp_resultado > 0) {
            binario[i++] = temp_resultado % 2;
            temp_resultado /= 2;
        }
        for (int j = i - 1; j >= 0; j--) {
            printf("%d", binario[j]);
		
    }
    printf("\n");

    printf("Resultado em octal: %o\n", resultado);
    printf("Resultado em hexadecimal: %X\n", resultado);

    return 0;
	  
	}
}